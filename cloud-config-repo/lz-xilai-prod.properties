eureka.port=8761
eureka.hostname=192.168.114.11
eureka.healthcheck=true
eureka.lease-renewal-interval-in-seconds=10
eureka.lease-expiration-duration-in-seconds=30
eureka.prefer-ip-address=true
eureka.instance-id=${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
eureka.defaultZone=http://${eureka.hostname}:${eureka.port}/eureka/

#nginx.host=http://118.184.186.2:8088/
ds.zuul.host=192.168.114.12:9091

info.app.name=${spring.application.name}
info.app.profiles=${spring.profiles.active}
info.app.version=${app.version}
info.app.bootVersion=${parent.version}

info.ip.dbServer=${dbServer}
info.ip.dbSchema=${dbSchema}
info.ip.redis.cluster=${spring.redis.cluster.nodes}
info.ip.redis.host=${spring.redis.cluster.host}
info.ip.eureka=${eureka.instance.hostname}
info.ip.rabbitmq=${spring.rabbitmq.host}
info.ip.config=${spring.cloud.config.uri}
info.ip.logstash=${logstash.destination}

#Redis proxy(Redis1 Host + Redis2 Host) 
redis.nodes=${redis1.nodes},${redis2.nodes}
redis.host=${redis1.host},${redis2.host}
redis.port=${redis1.port}
redis.passwd=
redis.timeOut=2000
redis.max-redirects=8

#------ 192.168.114.11(内网地址）172.16.201.158（浮动ip,供ssh访问使用）--------
#Redis1 Host(192.168.114.11)
redis1.nodes=192.168.114.11:7000,192.168.114.11:7001,192.168.114.11:7002
redis1.host=192.168.114.11
redis1.port=7000
redis1.passwd=
redi1.timeOut=2000
redis1.max-redirects=8

#------ 192.168.114.12(内网地址）172.16.201.157（浮动ip,供ssh访问使用）--------
#Redis2 Host(192.168.114.12)
redis2.nodes=192.168.114.12:7003,192.168.114.12:7004,192.168.114.12:7005
redis2.host=192.168.114.12
redis2.port=7003
redis2.passwd=
redis2.timeOut=2000
redis2.max-redirects=8

#192.168.114.14(浮动IP：172.16.201.160)集群代理，代理3个节点：192.168.114.5(172.16.201.153),192.168.114.6(172.16.201.151),192.168.114.7(172.16.201.152)
#管理控制台访问方式：http://172.16.201.153:15672
rabbitmq.host=192.168.114.14
rabbitmq.port=5672
rabbitmq.username=guest
rabbitmq.password=guest
rabbitmq.virtualHost=/

mail.sendAddr=lz.admin@icerno.com
mail.smtpHost=123.126.65.62
#smtp.qiye.163.com
mail.userName=lz.admin@icerno.com
mail.password=lz.Admin!

cross-domain=false
windows.temp=d:/temp
linux.temp=/home/xilai/temp
windows.log.path=d:/log/boot
linux.log.path=/var/log/boot

sleuth.percentage=0.2
log.level=INFO
lz.log.level=DEBUG
logstash.enable=true
logstash.destination=172.16.100.155:14560

#全文检索库地址
elastic.server=http://172.16.100.155:9200/

spring.http.multipart.max-file-size: 50Mb
spring.http.multipart.max-request-size: 50Mb

hystrix.isolation.strategy=SEMAPHORE
hystrix.timeoutInMilliseconds=6000

db.user=xlkd
db.password=crypt[bVD6HQQm271isCeo/gLJig==]
mongodb.user=admin
mongodb.password=crypt[CzTwEejYydxisCeo/gLJig==]
#haproxy:192.168.114.8(内网地址）172.16.201.154（浮动ip,供ssh访问使用）
master.dbServer=192.168.114.8:3306
#192.168.114.14(内网地址）172.16.201.160（浮动ip,供ssh访问使用）
master.mongodb=192.168.114.14:27017
master.jdbc.driverClassName=com.mysql.jdbc.Driver
master.jdbc.parameter=autoReconnect=true&useUnicode=true&characterEncoding=utf-8&failOverReadOnly=false&useSSL=false

param.dbServer=${master.dbServer}
param.mongodb=${master.mongodb}

# ------------- 喜来快递数据库 -------------
#发件端
xilaisender.dbServer=${master.dbServer}
xilaisender.mongodb=${master.mongodb}
#收件端
xilaireceiver.dbServer=${master.dbServer}
xilaireceiver.mongodb=${master.mongodb}
#管理端
xilaimanager.dbServer=${master.dbServer}
xilaimanager.mongodb=${master.mongodb}
#喜来能力中心
xilaiability.dbServer=${master.dbServer}
xilaiability.mongodb=${master.mongodb}
#喜来支付宝下单服务
xilaialipay.dbServer=${master.dbServer}
xilaialipay.mongodb=${master.mongodb}
#喜来定时任务服务
xilaitask.dbServer=${master.dbServer}
xilaitask.mongodb=${master.mongodb}

#-------------------hikari 公共配置信息-----------------------
hikari.maxLifetime=1800000
hikari.connectionTimeout=5000
hikari.idleTimeout=600000

#-------------------c3p0 公共配置信息-----------------------
# 1800秒内未使用则连接被丢弃, default 永不丢弃
c3p0.maxIdleTime=1800

# c3p0一次同时获取的连接数 Default: 3
c3p0.acquireIncrement=3

# 失败后重复尝试的次数。Default: 30
c3p0.acquireRetryAttempts=30

# 每60秒检查空闲连接
c3p0.idleConnectionTestPeriod=60

# 两次连接间隔时间，单位毫秒。Default: 1000
c3p0.acquireRetryDelay=1000

# c3p0将建一张名为test的空表
c3p0.automaticTestTable=test
c3p0.preferredTestQuery=select id from test where id=1

c3p0.maxStatements=1000
c3p0.breakAfterAcquireFailure=false
c3p0.testConnectionOnCheckout=false

# true那么在取得连接的同时将校验连接的有效性。Default: false
c3p0.testConnectionOnCheckin=false

# 当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。Default: 0
c3p0.checkoutTimeout=5000

#----------------------数据库表结构地址------------------------
tableconfig.addr=http://${spring.cloud.config.hostname}:${config.port:8804}/table-conf?projName=tablejson/${dbSchema}.json
